{"version":3,"file":"7443.5412795d7e2746846ece.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/gift/GiftRibbon.module.scss?54c5","webpack://telegram-t/./src/components/common/gift/GiftRibbon.tsx","webpack://telegram-t/./src/components/common/helpers/gifts.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/left/settings/folders/IconSelector.tsx","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/ActionMessageUpdatedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://telegram-t/./src/components/middle/message/reactions/Reactions.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/global/helpers/peers.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/hooks/useResizeMessageObserver.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/visibility/getOffsetToContainer.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: React.RefObject<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-closed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import type { TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle } from '../../global/helpers';\nimport { isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AmQSvxpZ\",\"text\":\"pQW7dcwr\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useUniqueId from '../../../hooks/useUniqueId';\n\nimport styles from './GiftRibbon.module.scss';\n\nconst COLORS = {\n  red: [['#FF5B54', '#ED1C26'], ['#653633', '#532224']],\n  blue: [['#6ED2FF', '#34A4FC'], ['#344F5A', '#152E42']],\n} as const;\ntype ColorKey = keyof typeof COLORS;\n\nconst COLOR_KEYS = new Set(Object.keys(COLORS) as ColorKey[]);\n\ntype OwnProps = {\n  color: ColorKey | string;\n  text: string;\n  className?: string;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n};\n\nconst GiftRibbon = ({\n  text, color, className, theme,\n}: OwnProps & StateProps) => {\n  const randomId = useUniqueId();\n  const validSvgRandomId = `svg-${randomId}`; // ID must start with a letter\n\n  const colorKey = COLOR_KEYS.has(color as ColorKey) ? color as ColorKey : undefined;\n\n  const isDarkTheme = theme === 'dark';\n\n  const gradientColor = colorKey ? COLORS[colorKey][isDarkTheme ? 1 : 0] : undefined;\n  const startColor = gradientColor ? gradientColor[0] : color;\n  const endColor = gradientColor ? gradientColor[1] : color;\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <svg className={styles.ribbon} width=\"56\" height=\"56\" viewBox=\"0 0 56 56\" fill=\"none\">\n        <path d=\"M52.4851 26.4853L29.5145 3.51472C27.2641 1.26428 24.2119 0 21.0293 0H2.82824C1.04643 0 0.154103 2.15429 1.41403 3.41422L52.5856 54.5858C53.8455 55.8457 55.9998 54.9534 55.9998 53.1716V34.9706C55.9998 31.788 54.7355 28.7357 52.4851 26.4853Z\" fill={`url(#${validSvgRandomId})`} />\n        <defs>\n          <linearGradient id={validSvgRandomId} x1=\"27.9998\" y1=\"1\" x2=\"27.9998\" y2=\"55\" gradientUnits=\"userSpaceOnUse\">\n            <stop stop-color={startColor} />\n            <stop offset=\"1\" stop-color={endColor} />\n          </linearGradient>\n        </defs>\n      </svg>\n      <div className={styles.text}>{text}</div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      theme: selectTheme(global),\n    };\n  },\n)(GiftRibbon));\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CustomPeerType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CustomPeerType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CustomPeerType[];\n  onSelectedCategoriesChange?: (categories: CustomPeerType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  categories?: UniqueCustomPeer[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = ({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (withStatus && peer) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n      if (withPeerTypes && peer) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\"};","import React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  clearBottomSector,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const x = 0.5 + xOffset;\n        const y = 0.5 + yOffset;\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x, y, sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const centerShift = (width - Math.max(width, MIN_SIZE * dpr)) / 2; // Shift coords if canvas is smaller than `MIN_SIZE`\n      const renderX = x * Math.max(width, MIN_SIZE * dpr) + centerShift;\n      const renderY = y * Math.max(height, MIN_SIZE * dpr) + centerShift;\n\n      const size = BASE_ICON_SIZE * dpr * sizeFactor * (centerShift ? 0.8 : 1);\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n    radialGradient.addColorStop(0, '#FFFFFF77');\n    radialGradient.addColorStop(1, '#FFFFFF');\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current!;\n    if (!width || !height) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas className={styles.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import React, {useCallback, useState} from '../../../../lib/teact/teact';\n\nimport './IconSelector.scss';\n\ninterface Icon {\n  name: string;\n  icon: string;\n  svg: JSX.Element;\n}\n\nexport const icons: Icon[] = [\n  {\n    name: 'bot',\n    icon: '🤖',\n    svg: (\n      <svg\n        width=\"36\"\n        height=\"36\"\n        viewBox=\"0 0 36 36\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M21.116 16.8597C21.8886 16.8597 22.5149 16.0768 22.5149 15.1111C22.5149 14.1453 21.8886 13.3625 21.116 13.3625C20.3434 13.3625 19.7171 14.1453 19.7171 15.1111C19.7171 16.0768 20.3434 16.8597 21.116 16.8597Z\"\n          fill=\"black\"\n        />\n        <path\n          d=\"M14.8791 16.8597C15.6517 16.8597 16.278 16.0768 16.278 15.1111C16.278 14.1454 15.6517 13.3625 14.8791 13.3625C14.1065 13.3625 13.4802 14.1454 13.4802 15.1111C13.4802 16.0768 14.1065 16.8597 14.8791 16.8597Z\"\n          fill=\"black\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M27.0395 21.2574V15.3174C27.0395 10.3252 22.9925 6.27826 18.0004 6.27826C13.0082 6.27826 8.96124 10.3252 8.96124 15.3174V21.2574C8.96124 24.1502 8.96124 25.5966 9.52422 26.7015C10.0194 27.6734 10.8096 28.4636 11.7815 28.9588C12.8864 29.5217 14.3328 29.5217 17.2256 29.5217H18.7752C21.6679 29.5217 23.1143 29.5217 24.2192 28.9588C25.1911 28.4636 25.9813 27.6734 26.4765 26.7015C27.0395 25.5966 27.0395 24.1502 27.0395 21.2574ZM11.5434 15.3174C11.5434 11.7516 14.4341 8.86088 17.9999 8.86088C21.5658 8.86088 24.4565 11.7516 24.4565 15.3174V16.7772C24.4565 18.2549 23.608 19.6077 22.1748 19.9675C21.0836 20.2414 19.6533 20.4826 17.9999 20.4826C16.3466 20.4826 14.9163 20.2414 13.8251 19.9675C12.3919 19.6077 11.5434 18.2549 11.5434 16.7772V15.3174Z\"\n          fill=\"black\"\n        />\n        <path\n          d=\"M30.2676 16.4C31.096 16.4 31.7676 17.0716 31.7676 17.9V24.3565C31.7676 25.1849 31.096 25.8565 30.2676 25.8565C29.4392 25.8565 28.7676 25.1849 28.7676 24.3565V17.9C28.7676 17.0716 29.4392 16.4 30.2676 16.4Z\"\n          fill=\"black\"\n        />\n        <path\n          d=\"M7.23291 17.9C7.23291 17.0716 6.56134 16.4 5.73291 16.4C4.90448 16.4 4.23291 17.0716 4.23291 17.9V24.3565C4.23291 25.1849 4.90448 25.8565 5.73291 25.8565C6.56134 25.8565 7.23291 25.1849 7.23291 24.3565V17.9Z\"\n          fill=\"black\"\n        />\n      </svg>\n    ),\n  },\n  {\n    name: 'channel',\n    icon: '📢',\n    svg: (\n      <svg\n        width=\"36\"\n        height=\"36\"\n        viewBox=\"0 0 36 36\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M12.1765 22.708H15.5855C16.0157 22.708 16.2308 22.708 16.4395 22.7306C17.0143 22.7929 17.568 22.9829 18.0601 23.2866C18.2387 23.3969 18.4085 23.5289 18.7481 23.7931L22.3164 26.5684C24.4611 28.2365 25.5335 29.0706 26.4338 29.0629C27.217 29.0562 27.9551 28.6953 28.4412 28.0811C29 27.3751 29 26.0166 29 23.2996V11.7634C29 9.04635 29 7.68782 28.4412 6.98185C27.9551 6.3677 27.217 6.00672 26.4338 6.00005C25.5335 5.99239 24.4611 6.82644 22.3164 8.49455L18.7481 11.2699C18.4085 11.534 18.2387 11.6661 18.0601 11.7763C17.568 12.0801 17.0143 12.27 16.4395 12.3324C16.2308 12.355 16.0157 12.355 15.5855 12.355H12.1765C9.31759 12.355 7 14.6726 7 17.5315C7 20.3904 9.31758 22.708 12.1765 22.708Z\"\n          fill=\"black\"\n        />\n        <path\n          d=\"M12.2982 25.1742C12.1764 25.4348 12.1764 25.7709 12.1764 26.4431V27.8844C12.1764 29.3139 13.3352 30.4727 14.7646 30.4727C16.1941 30.4727 17.3529 29.3139 17.3529 27.8844V26.4431C17.3529 25.7709 17.3529 25.4348 17.231 25.1742C17.1026 24.8995 16.8817 24.6786 16.6069 24.5501C16.3464 24.4283 16.0103 24.4283 15.3381 24.4283H14.1912C13.519 24.4283 13.1829 24.4283 12.9224 24.5501C12.6476 24.6786 12.4267 24.8995 12.2982 25.1742Z\"\n          fill=\"black\"\n        />\n      </svg>\n    ),\n  },\n  {\n    name: 'chat',\n    icon: '✅',\n    svg: (\n      <svg\n        width=\"36\"\n        height=\"36\"\n        viewBox=\"0 0 36 36\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M30 17.2847C30 11.2598 24.6274 6.37561 18 6.37561C11.3726 6.37561 6 11.2598 6 17.2847C6 20.7209 7.60509 23.5375 10.3363 25.5371C10.6856 25.7929 11.0073 27.2137 10.2288 28.4072C9.45024 29.6006 8.47959 30.146 8.96637 30.3502C9.26647 30.4761 11.0397 30.5384 12.3196 29.8206C14.1496 28.7943 14.6613 27.7725 15.0551 27.8629C15.9973 28.079 16.9839 28.1938 18 28.1938C24.6274 28.1938 30 23.3096 30 17.2847Z\"\n          fill=\"black\"\n        />\n      </svg>\n    ),\n  },\n  {\n    name: 'chats',\n    icon: '💬',\n    svg: (\n      <svg\n        width=\"36\"\n        height=\"36\"\n        viewBox=\"0 0 36 36\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M22.3902 9.03227C20.3914 7.162 17.595 6 14.5 6C8.42487 6 3.5 10.4772 3.5 16C3.5 19.1499 4.97133 21.7318 7.47498 23.5647C7.79515 23.7991 8.09005 25.1016 7.37638 26.1956C7.08455 26.643 6.76327 26.991 6.51594 27.2589C6.15843 27.6462 5.95542 27.8661 6.21917 27.9767C6.49426 28.0921 8.11974 28.1492 9.29294 27.4912C10.2112 26.9763 10.7674 26.4625 11.1419 26.1166C11.4516 25.8305 11.6371 25.6592 11.8005 25.6967C12.3863 25.831 12.9908 25.9227 13.6098 25.9677C13.6182 25.9683 13.6267 25.9689 13.6351 25.9695C13.9205 25.9897 14.2089 26 14.5 26C20.5751 26 25.5 21.5228 25.5 16C25.5 13.2908 24.3149 10.8332 22.3902 9.03227Z\"\n          fill=\"black\"\n        />\n        <path\n          d=\"M32.5 19C32.5 15.0932 30.0356 11.7097 26.4429 10.0641C26.0059 9.86387 25.6121 10.3758 25.8411 10.7985C26.6828 12.3527 27.16 14.1145 27.16 16C27.16 21.6043 22.944 26.1149 17.4721 27.3341C16.9915 27.4412 16.8851 28.0914 17.3467 28.2627C18.6282 28.738 20.0305 29 21.5 29C22.4314 29 23.3358 28.8948 24.1995 28.6967C24.3629 28.6592 24.5484 28.8305 24.8581 29.1166C25.2326 29.4625 25.7888 29.9763 26.7071 30.4912C27.8803 31.1492 29.5057 31.0921 29.7808 30.9767C30.0446 30.8661 29.8416 30.6462 29.4841 30.2589C29.2367 29.991 28.9155 29.643 28.6236 29.1956C27.91 28.1016 28.2048 26.7991 28.525 26.5647C31.0287 24.7318 32.5 22.1499 32.5 19Z\"\n          fill=\"black\"\n        />\n\n      </svg>\n    ),\n  },\n  {\n    name: 'user',\n    icon: '👤',\n    svg: (\n      <svg\n        width=\"36\"\n        height=\"36\"\n        viewBox=\"0 0 36 36\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M19 16.8125C22.0376 16.8125 24.5 14.3501 24.5 11.3125C24.5 8.27493 22.0376 5.8125 19 5.8125C15.9624 5.8125 13.5 8.27493 13.5 11.3125C13.5 14.3501 15.9624 16.8125 19 16.8125Z\"\n          fill=\"black\"\n        />\n        <path\n          d=\"M8 25.5942C8 27.5787 9.60875 29.1875 11.5933 29.1875H26.4067C28.3912 29.1875 30 27.5787 30 25.5942C30 24.7942 29.8042 23.999 29.2698 23.4036C28.008 21.9978 24.9618 19.5625 19 19.5625C13.0382 19.5625 9.992 21.9978 8.7302 23.4036C8.19579 23.999 8 24.7942 8 25.5942Z\"\n          fill=\"black\"\n        />\n\n      </svg>\n    ),\n  },\n  {\n    name: 'group',\n    icon: '👥',\n    svg: (\n      <svg\n        width=\"36\"\n        height=\"36\"\n        viewBox=\"0 0 36 36\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M14.3333 17.3333C16.9107 17.3333 19 15.244 19 12.6667C19 10.0893 16.9107 8 14.3333 8C11.756 8 9.66667 10.0893 9.66667 12.6667C9.66667 15.244 11.756 17.3333 14.3333 17.3333Z\"\n          fill=\"black\"\n        />\n        <path\n          d=\"M5 25.3654C5 26.8204 6.17955 28 7.63461 28H21.0376C22.4901 27.997 23.6667 26.8186 23.6667 25.3654C23.6667 24.5819 23.4961 23.799 23.0277 23.1928C22.9608 23.1062 22.8879 23.0232 22.8084 22.9443C22.4728 22.611 22.0286 22.2323 21.4585 21.8601C21.4277 21.8399 21.3965 21.8198 21.365 21.7998C19.9048 20.8708 17.6512 20 14.3333 20C9.6174 20 7.05162 21.7592 5.85822 22.9443C5.22282 23.5753 5 24.4699 5 25.3654Z\"\n          fill=\"black\"\n        />\n        <path\n          d=\"M25.1023 28H30.823C32.0253 28 33 27.0253 33 25.823C33 25.0652 32.806 24.3089 32.2604 23.7831C31.2358 22.7956 29.037 21.3333 25 21.3333C24.7745 21.3333 24.5548 21.3379 24.3406 21.3467L24.368 21.3738C25.5844 22.5817 25.88 24.1575 25.88 25.3654C25.88 26.3368 25.5943 27.2415 25.1023 28Z\"\n          fill=\"black\"\n        />\n        <path\n          d=\"M25 18.6667C27.2091 18.6667 29 16.8758 29 14.6667C29 12.4575 27.2091 10.6667 25 10.6667C22.7909 10.6667 21 12.4575 21 14.6667C21 16.8758 22.7909 18.6667 25 18.6667Z\"\n          fill=\"black\"\n        />\n\n      </svg>\n    ),\n  },\n  {\n    name: 'star',\n    icon: '⭐',\n    svg: (\n      <svg\n        width=\"36\"\n        height=\"36\"\n        viewBox=\"0 0 36 36\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M16.8151 27.4314C17.4066 27.0754 18.1464 27.0754 18.7379 27.4314L23.2643 30.1558C24.6767 31.0059 26.4164 29.739 26.0409 28.1338L24.8434 23.0146C24.6854 22.3394 24.9152 21.6324 25.4399 21.1792L29.4253 17.7361C30.6744 16.6571 30.0084 14.6069 28.3637 14.4678L23.1107 14.0233C22.4222 13.9651 21.8224 13.5308 21.5521 12.8949L19.4922 8.04816C18.849 6.53473 16.7039 6.53473 16.0607 8.04816L14.0008 12.8949C13.7306 13.5308 13.1307 13.9651 12.4422 14.0233L7.18921 14.4678C5.54451 14.6069 4.8786 16.6571 6.12762 17.7361L10.1131 21.1792C10.6377 21.6324 10.8675 22.3394 10.7096 23.0146L9.51201 28.1338C9.1365 29.739 10.8762 31.0059 12.2887 30.1558L16.8151 27.4314Z\"\n          fill=\"black\"\n        />\n      </svg>\n    ),\n  },\n  {\n    name: 'folder',\n    icon: '', // default is folder icon\n    svg: (\n      <svg\n        width=\"36\"\n        height=\"36\"\n        viewBox=\"0 0 36 36\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M6.21265 9.53789C6 10.1456 6 10.9016 6 12.4135C6 12.6655 6 12.7915 6.03544 12.8928C6.09892 13.0742 6.24156 13.2169 6.42298 13.2803C6.52427 13.3158 6.65026 13.3158 6.90226 13.3158H29.2421C29.3595 13.3158 29.4181 13.3158 29.4672 13.308C29.7375 13.2652 29.9494 13.0533 29.9922 12.783C30 12.7339 30 12.6752 30 12.5579C30 12.0885 30 11.8538 29.9689 11.6574C29.7977 10.5764 28.9499 9.72863 27.8689 9.55742C27.6725 9.52632 27.4378 9.52632 26.9684 9.52632H19.1548C18.9418 9.52632 18.8353 9.52632 18.7327 9.52075C17.8706 9.47396 17.0503 9.13419 16.4077 8.55768C16.3312 8.48907 16.2559 8.41377 16.1053 8.26319C15.9547 8.1126 15.8794 8.03725 15.8029 7.96863C15.1602 7.39213 14.3399 7.05236 13.4778 7.00557C13.3752 7 13.2687 7 13.0557 7H11.4135C9.90159 7 9.14562 7 8.53789 7.21265C7.44937 7.59354 6.59354 8.44937 6.21265 9.53789Z\"\n          fill=\"black\"\n        />\n        <path\n          d=\"M6.20651 16.8766C6 17.282 6 17.8125 6 18.8737V20.3895C6 23.2192 6 24.6341 6.5507 25.7149C7.03512 26.6656 7.80807 27.4386 8.75878 27.923C9.8396 28.4737 11.2545 28.4737 14.0842 28.4737H21.9158C24.7455 28.4737 26.1604 28.4737 27.2412 27.923C28.1919 27.4386 28.9649 26.6656 29.4493 25.7149C30 24.6341 30 23.2192 30 20.3895V18.8737C30 17.8125 30 17.282 29.7935 16.8766C29.6118 16.5201 29.322 16.2303 28.9655 16.0486C28.5602 15.8421 28.0296 15.8421 26.9684 15.8421H9.03158C7.97043 15.8421 7.43985 15.8421 7.03454 16.0486C6.67803 16.2303 6.38817 16.5201 6.20651 16.8766Z\"\n          fill=\"black\"\n        />\n\n      </svg>\n    ),\n  },\n];\n\ninterface IconSelectorProps {\n  onEmojiSelect: (emoji: string, name: string) => void;\n}\n\nconst IconSelector: React.FC<IconSelectorProps> = ({ onEmojiSelect }: IconSelectorProps) => {\n  return (\n    <div className=\"folderIcons\">\n      {icons.map((i) => (\n        <i key={i.name} onClick={() => onEmojiSelect(i.icon, i.name)}>\n          {i.svg}\n        </i>\n      ))}\n    </div>\n  );\n};\n\nexport default IconSelector;\n\nexport const isSvgIcon = (emoji: string | undefined): string | null => {\n  console.log(\"test\",emoji);\n  if (undefined === emoji) return 'folder';\n  const foundIcon = icons.find((value) => value.icon === emoji);\n  // eslint-disable-next-line no-null/no-null\n  return foundIcon ? foundIcon.name : null;\n};\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getPhotoMediaHash, getVideoProfilePhotoMediaHash } from '../../global/helpers';\nimport { fetchBlob } from '../../util/files';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useOldLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const photo = message.content.action!.photo!;\n  const suggestedPhotoUrl = useMedia(getPhotoMediaHash(photo, 'full'));\n  const suggestedVideoUrl = useMedia(getVideoProfilePhotoMediaHash(photo));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    if (!suggestedVideoUrl) return;\n\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const blob = await fetchBlob(suggestedVideoUrl);\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetchBlob(suggestedPhotoUrl));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        messageId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageUpdatedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleViewUpdatedAvatar = () => {\n    openMediaViewer({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: MAIN_THREAD_ID,\n      origin: MediaViewerOrigin.SuggestedAvatar,\n    });\n  };\n\n  return (\n    <>\n      <span>{renderContent()}</span>\n      <span\n        className=\"action-message-updated-avatar\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleViewUpdatedAvatar}\n        aria-label={lang('ViewPhotoAction')}\n      >\n        <Avatar\n          photo={message.content.action!.photo}\n          loopIndefinitely\n          withVideo\n          size=\"jumbo\"\n        />\n      </span>\n    </>\n  );\n};\n\nexport default memo(ActionMessageUpdatedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useOldLang();\n  const { toggleChannelRecommendations, loadChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useEffect(() => {\n    if (!similarChannelIds) {\n      loadChannelRecommendations({ chatId });\n    }\n  }, [chatId, similarChannelIds]);\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <Icon name=\"user-filled\" className={styles.icon} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useOldLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiPeer } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(peer: ApiPeer, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(peer), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useUnmountCleanup,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageActionStarGift, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, MessageListType, ThreadId } from '../../types';\nimport type { OnIntersectPinnedMessage } from './hooks/usePinnedMessage';\n\nimport {\n  getChatTitle, getMessageHtmlId, getPeerTitle, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectGiftStickerForStars,\n  selectIsCurrentUserPremium,\n  selectIsMessageFocused,\n  selectPeer,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatInteger, formatIntegerCompact } from '../../util/textFormat';\nimport { getGiftAttributes, getStickerFromGift } from '../common/helpers/gifts';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\nimport useMessageResizeObserver from '../../hooks/useResizeMessageObserver';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport Avatar from '../common/Avatar';\nimport GiftRibbon from '../common/gift/GiftRibbon';\nimport RadialPatternBackground from '../common/profile/RadialPatternBackground';\nimport Sparkles from '../common/Sparkles';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ActionMessageUpdatedAvatar from './ActionMessageUpdatedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport Reactions from './message/reactions/Reactions';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  starsGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n  patternColor?: string;\n  currentUserId?: string;\n  isCurrentUserPremium?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  threadId,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  starsGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  patternColor,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onIntersectPinnedMessage,\n  currentUserId,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openPremiumModal,\n    requestConfetti,\n    checkGiftCode,\n    getReceipt,\n    openGiftInfoModalFromMessage,\n    openPrizeStarsTransactionFromGiveaway,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage({\n    elementRef: ref,\n    chatId: message.chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isJustAdded,\n  });\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [message.id] });\n    }\n  });\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isUpdatedAvatar = message.content.action?.type === 'updateProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n  const isStarsGift = message.content.action?.type === 'giftStars';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const isPrizeStars = message.content.action?.type === 'prizeStars';\n\n  const withServiceReactions = Boolean(message.areReactionsPossible && message?.reactions);\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isPremiumGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({ withStars: true });\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransitionDeprecated(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      oldLang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, message, observeIntersectionForLoading, observeIntersectionForPlaying, oldLang,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleStarGiftClick = () => {\n    const starGift = message.content.action?.starGift;\n    if (!starGift) return;\n\n    openGiftInfoModalFromMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handlePrizeStarsClick = () => {\n    openPrizeStarsTransactionFromGiveaway({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  const handleClick = () => {\n    if (message.content.action?.type === 'receipt') {\n      getReceipt({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    }\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    const giftMessage = message.content.action?.message;\n    return (\n      <span\n        className=\"action-message-gift\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePremiumGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{oldLang('ActionGiftPremiumTitle')}</strong>\n        <span>\n          {oldLang('ActionGiftPremiumSubtitle', oldLang('Months', message.content.action?.months, 'i'))}\n        </span>\n        {giftMessage && (\n          <div className=\"action-message-gift-subtitle\">\n            {renderTextWithEntities({ text: giftMessage.text, entities: giftMessage.entities })}\n          </div>\n        )}\n\n        <span className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('ActionGiftPremiumView')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    const giftMessage = message.content.action?.message;\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(\n            oldLang(\n              isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n                ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n              getChatTitle(oldLang, targetChat),\n            ),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(oldLang(\n            'BoostingUnclaimedPrizeDuration',\n            oldLang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        {giftMessage && (\n          <div className=\"action-message-gift-subtitle\">\n            {renderTextWithEntities({ text: giftMessage.text, entities: giftMessage.entities })}\n          </div>\n        )}\n\n        <span className=\"action-message-button\">\n          {oldLang('BoostingReceivedGiftOpenBtn')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarsGift() {\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starsGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <div className=\"action-message-stars-balance\">\n          {formatInteger(message.content.action!.stars!)}\n          <strong>{oldLang('Stars')}</strong>\n        </div>\n        <span className=\"action-message-stars-subtitle\">\n          {renderText(\n            oldLang(!message.isOutgoing\n              ? 'ActionGiftStarsSubtitleYou' : 'ActionGiftStarsSubtitle', getChatTitle(oldLang, targetChat!)),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('ActionGiftPremiumView')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarGiftUserCaption() {\n    const starGift = message.content.action?.starGift;\n    if (!starGift) return undefined;\n    const { fromId, peerId } = starGift;\n\n    const fromPeer = fromId ? selectPeer(getGlobal(), fromId) : undefined;\n    const targetPeer = peerId\n      ? selectPeer(getGlobal(), peerId)\n      : starGift.type === 'starGiftUnique' && !message.isOutgoing\n        ? targetChat : undefined;\n\n    if (targetPeer && targetPeer.id !== currentUserId) {\n      return (\n        <div className=\"action-message-user-caption\">\n          <span> {lang('GiftTo')} </span>\n          {starGift.type === 'starGift' && (\n            <Avatar className=\"action-message-user-avatar\" size=\"micro\" peer={targetPeer} />\n          )}\n          <span> {getPeerTitle(lang, targetPeer)} </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"action-message-user-caption\">\n        <span> {lang('GiftFrom')} </span>\n        {starGift.type === 'starGift' && (\n          <Avatar className=\"action-message-user-avatar\" size=\"micro\" peer={fromPeer || senderUser} />\n        )}\n        <span> {getPeerTitle(lang, fromPeer || senderUser!)} </span>\n      </div>\n    );\n  }\n\n  function renderStarGiftUserDescription() {\n    const starGift = message.content.action?.starGift as ApiMessageActionStarGift;\n    const targetChatTitle = targetChat && getPeerTitle(lang, targetChat);\n    const starGiftMessage = starGift?.message;\n    if (!starGift) return undefined;\n\n    if (starGiftMessage) {\n      return renderTextWithEntities({ text: starGiftMessage.text, entities: starGiftMessage.entities });\n    }\n    const amountToConvert = starGift?.starsToConvert;\n\n    if (starGift.isSaved) {\n      return lang(starGift.savedId ? 'ActionStarGiftChannelDisplaying' : 'ActionStarGiftDisplaying');\n    }\n\n    if (starGift.isUpgraded) {\n      return lang('ActionStarGiftUpgraded');\n    }\n\n    if (message.isOutgoing) {\n      if (amountToConvert) {\n        return lang('ActionStarGiftPeerOutDescription', {\n          peer: targetChatTitle || 'Someone',\n          count: amountToConvert,\n        }, { withNodes: true, pluralValue: amountToConvert });\n      }\n\n      if (starGift.canUpgrade) {\n        return lang('ActionStarGiftPeerOutDescriptionUpgrade', {\n          peer: targetChatTitle || 'Someone',\n        });\n      }\n    }\n\n    if (starGift.isConverted) {\n      return message.isOutgoing\n        ? lang('GiftInfoPeerDescriptionOutConverted', {\n          amount: formatInteger(amountToConvert!),\n          peer: targetChatTitle || 'Chat',\n        }, {\n          pluralValue: amountToConvert!,\n          withNodes: true,\n          withMarkdown: true,\n        })\n        : lang('GiftInfoDescriptionConverted', {\n          amount: formatInteger(amountToConvert!),\n        }, {\n          pluralValue: amountToConvert!,\n          withNodes: true,\n          withMarkdown: true,\n        });\n    }\n\n    if (amountToConvert) {\n      return lang('ActionStarGiftDescription2', {\n        count: amountToConvert,\n      }, { withNodes: true, pluralValue: amountToConvert });\n    }\n\n    if (starGift.canUpgrade) {\n      return lang('ActionStarGiftDescriptionUpgrade');\n    }\n\n    return undefined;\n  }\n\n  function renderStarGift() {\n    const starGift = message.content.action?.starGift as ApiMessageActionStarGift;\n    if (!starGift || starGift.gift.type !== 'starGift') return undefined;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n\n        <AnimatedIconFromSticker\n          sticker={starGift.gift.sticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n          size={STAR_GIFT_STICKER_SIZE}\n        />\n\n        {renderStarGiftUserCaption()}\n        <div className=\"action-message-gift-subtitle\">\n          {renderStarGiftUserDescription()}\n        </div>\n\n        <div className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {starGift.alreadyPaidUpgradeStars && (!message.isOutgoing || targetUsers?.[0]?.isSelf)\n            ? lang('ActionStarGiftUnpack') : oldLang('ActionGiftPremiumView')}\n        </div>\n        {starGift.gift.availabilityTotal && (\n          <GiftRibbon\n            color={patternColor || 'blue'}\n            text={oldLang('Gift2Limited1OfRibbon', formatIntegerCompact(starGift.gift.availabilityTotal))}\n          />\n        )}\n      </span>\n    );\n  }\n\n  function renderStarGiftUnique() {\n    const starGift = message.content.action?.starGift;\n    if (!starGift || starGift.gift.type !== 'starGiftUnique') return undefined;\n\n    const sticker = getStickerFromGift(starGift.gift)!;\n    const attributes = getGiftAttributes(starGift.gift);\n    const { backdrop, pattern, model } = attributes || {};\n\n    if (!backdrop || !pattern || !model) return undefined;\n\n    const backgroundColors = [backdrop.centerColor, backdrop.edgeColor];\n\n    const adaptedPatternColor = `${backdrop.patternColor.slice(0, 7)}55`;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-centered action-message-unique\"\n        tabIndex={0}\n        role=\"button\"\n        style={`--pattern-color: ${adaptedPatternColor}`}\n        onClick={handleStarGiftClick}\n      >\n        <div className=\"action-message-unique-background-wrapper\">\n          <RadialPatternBackground\n            className=\"action-message-unique-background\"\n            backgroundColors={backgroundColors}\n            patternColor={backdrop.patternColor}\n            patternIcon={pattern.sticker}\n            clearBottomSector\n          />\n        </div>\n        <AnimatedIconFromSticker\n          sticker={sticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n          size={STAR_GIFT_STICKER_SIZE}\n        />\n        {renderStarGiftUserCaption()}\n        <div className=\"action-message-unique-title\" style={`color: ${backdrop.textColor}`}>\n          {starGift.gift.title} #{starGift.gift.number}\n        </div>\n        <div className=\"action-message-unique-properties\" style={`color: ${backdrop.textColor}`}>\n          <div className=\"action-message-unique-property\">\n            {oldLang('Gift2AttributeModel')}\n          </div>\n          <div className=\"action-message-unique-value\">\n            {model.name}\n          </div>\n          <div className=\"action-message-unique-property\">\n            {oldLang('Gift2AttributeBackdrop')}\n          </div>\n          <div className=\"action-message-unique-value\">\n            {backdrop.name}\n          </div>\n          <div className=\"action-message-unique-property\">\n            {oldLang('Gift2AttributeSymbol')}\n          </div>\n          <div className=\"action-message-unique-value\">\n            {pattern.name}\n          </div>\n        </div>\n\n        <div className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('Gift2UniqueView')}\n        </div>\n        <GiftRibbon\n          color={adaptedPatternColor}\n          text={oldLang('ActionStarGift')}\n        />\n      </span>\n    );\n  }\n\n  function renderPrizeStars() {\n    const isUnclaimed = message.content.action?.isUnclaimed;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePrizeStarsClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starsGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(oldLang(isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize', getChatTitle(oldLang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'PrizeCredits2', {\n              count: (\n                <b>{formatInteger(message.content.action?.stars!)}</b>\n              ),\n            }, {\n              withNodes: true,\n              pluralValue: message.content.action?.stars!,\n            },\n          ), ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-button\">{\n          oldLang('ActionGiftPremiumView')\n        }\n        </span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isPremiumGift || isSuggestedAvatar || isUpdatedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && !isUpdatedAvatar && (\n        <span className=\"action-message-content\" onClick={handleClick}>{renderContent()}</span>\n      )}\n      {isPremiumGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isStarsGift && renderStarsGift()}\n      {isStarGift && renderStarGift()}\n      {isStarGiftUnique && renderStarGiftUnique()}\n      {isPrizeStars && renderPrizeStars()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isUpdatedAvatar && (\n        <ActionMessageUpdatedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n      {withServiceReactions && (\n        <Reactions\n          isOutside\n          message={message!}\n          threadId={threadId}\n          observeIntersection={observeIntersectionForPlaying}\n          isCurrentUserPremium={isCurrentUserPremium}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const theme = selectTheme(global);\n    const {\n      patternColor,\n    } = global.settings.themes[theme] || {};\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n\n    const starCount = content.action?.stars;\n    const starsGiftSticker = selectGiftStickerForStars(global, starCount);\n\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      starsGiftSticker,\n      topic,\n      patternColor,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      currentUserId: global.currentUserId,\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: { current: HTMLDivElement | null };\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_ANDROID, IS_IOS } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n  const animationRef = useRef<Animation>();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import type {\n  ApiInputInvoice,\n  ApiInputSavedStarGift,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiRequestInputSavedStarGift,\n  ApiStarsAmount,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { LangFn } from '../../util/localization';\nimport type { GlobalState } from '../types';\n\nimport arePropsShallowEqual from '../../util/arePropsShallowEqual';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'stargift') {\n    const {\n      peerId, shouldHideName, giftId, message, shouldUpgrade,\n    } = inputInvoice;\n    const peer = selectPeer(global, peerId);\n\n    if (!peer) return undefined;\n\n    return {\n      type: 'stargift',\n      peer,\n      shouldHideName,\n      giftId,\n      message,\n      shouldUpgrade,\n    };\n  }\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'chatInviteSubscription') {\n    const { hash } = inputInvoice;\n\n    return {\n      type: 'chatInviteSubscription',\n      hash,\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option, message,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n        message,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftUpgrade') {\n    const { inputSavedGift, shouldKeepOriginalDetails } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    if (!savedGift) return undefined;\n\n    return {\n      type: 'stargiftUpgrade',\n      inputSavedGift: savedGift,\n      shouldKeepOriginalDetails,\n    };\n  }\n\n  return undefined;\n}\n\nexport function getRequestInputSavedStarGift<T extends GlobalState>(\n  global: T, inputGift: ApiInputSavedStarGift,\n): ApiRequestInputSavedStarGift | undefined {\n  if (inputGift.type === 'user') return inputGift;\n\n  if (inputGift.type === 'chat') {\n    const chat = selectChat(global, inputGift.chatId);\n    if (!chat) return undefined;\n\n    return {\n      type: 'chat',\n      chat,\n      savedId: inputGift.savedId,\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  if (peer.type === 'api') {\n    return {\n      avatarIcon: 'bots',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramBotApi.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramBotApi.Subtitle',\n      peerColorId: 4,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  const amount = starsAmount.amount + starsAmount.nanos / 1e9;\n  if (amount < 0) {\n    return `- ${lang.number(Math.abs(amount))}`;\n  }\n\n  return `+ ${lang.number(amount)}`;\n}\n\nexport function formatStarsAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  return lang.number(starsAmount.amount + starsAmount.nanos / 1e9);\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId!,\n    stars: {\n      amount: stars!,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, targetChatId } = action;\n\n  return {\n    id: transactionId!,\n    stars: {\n      amount: stars!,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: targetChatId!,\n    },\n    date: message.date,\n    giveawayPostId: message.id,\n  };\n}\n\nexport function areInputSavedGiftsEqual(one: ApiInputSavedStarGift, two: ApiInputSavedStarGift) {\n  return arePropsShallowEqual(one, two);\n}\n","import type { ApiChat, ApiPeer, ApiUser } from '../../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../config';\n\nexport function isApiPeerChat(peer: ApiPeer): peer is ApiChat {\n  return 'title' in peer;\n}\n\nexport function isApiPeerUser(peer: ApiPeer): peer is ApiUser {\n  return !isApiPeerChat(peer);\n}\n\nexport function getPeerTypeKey(peer: ApiPeer) {\n  if (isApiPeerChat(peer)) {\n    if (peer.type === 'chatTypeBasicGroup' || peer.type === 'chatTypeSuperGroup') {\n      return 'ChatList.PeerTypeGroup';\n    }\n\n    if (peer.type === 'chatTypeChannel') {\n      return 'ChatList.PeerTypeChannel';\n    }\n\n    if (peer.type === 'chatTypePrivate') {\n      return 'ChatList.PeerTypeNonContact';\n    }\n\n    return undefined;\n  }\n\n  if (peer.id === SERVICE_NOTIFICATIONS_USER_ID) {\n    return 'ServiceNotifications';\n  }\n\n  if (peer.isSupport) {\n    return 'SupportStatus';\n  }\n\n  if (peer.type && peer.type === 'userTypeBot') {\n    return 'ChatList.PeerTypeBot';\n  }\n\n  if (peer.isContact) {\n    return 'ChatList.PeerTypeContact';\n  }\n\n  return 'ChatList.PeerTypeNonContactUser';\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T extends any>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","import { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: React.RefObject<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\nconst LUMA_THRESHOLD = 128;\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n\n/* eslint-disable no-bitwise */\nexport const convertToRGBA = (color: number): string => {\n  const alpha = (color >> 24) & 0xff;\n  const red = (color >> 16) & 0xff;\n  const green = (color >> 8) & 0xff;\n  const blue = color & 0xff;\n\n  const alphaFloat = alpha / 255;\n  return `rgba(${red}, ${green}, ${blue}, ${alphaFloat})`;\n};\n\nexport const numberToHexColor = (color: number): string => {\n  return `#${color.toString(16).padStart(6, '0')}`;\n};\n\nexport const getTextColor = (color: number): string => {\n  const r = (color >> 16) & 0xff;\n  const g = (color >> 8) & 0xff;\n  const b = color & 0xff;\n  const luma = getColorLuma([r, g, b]);\n  return luma > LUMA_THRESHOLD ? 'black' : 'white';\n};\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","export default function getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement;\n  }\n\n  return { top: offsetTop, left: offsetLeft };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};"],"names":["scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","memo","AnimatedCounter","text","className","isDisabled","ref","isRtl","useLang","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","selectCanAnimateInterface","getGlobal","undefined","characters","useMemo","elements","textLength","length","prevTextLength","i","charIndex","prevTextCharIndex","unshift","React","createElement","renderAnimatedCharacters","useEffect","timeoutId","window","setTimeout","clearTimeout","buildClassName","dir","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","getStickerMediaHash","previewBlobUrl","useMedia","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","useFlag","Boolean","thumbClassNames","useMediaTransitionDeprecated","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","AvatarList","peers","limit","badgeText","lang","useOldLang","pxSize","AVATAR_SIZES","renderingBadgeText","slice","map","peer","Avatar","MediaSpoiler","isVisible","withAnimation","width","height","useRef","shouldRender","transitionClassNames","useShowTransitionDeprecated","canvasRef","useCanvasBlur","handleClick","e","current","el","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","shiftX","shiftY","requestMutation","setAttribute","onClick","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","select","action","event","preventDefault","stopEvent","autoComplete","type","id","tabIndex","value","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","title","Icon","name","Button","ripple","disabled","withGlobal","global","peerId","forceShowSelf","selectPeer","user","selectUser","isSavedMessages","isSelf","PeerChip","icon","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","withPeerColors","withEmojiStatus","itemClassName","apiPeer","anyPeer","chat","isApiPeerChat","iconElement","titleElement","titleText","getPeerTitle","FullNameTitle","fullClassName","isForum","isAvatarSquare","getPeerColorClass","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","Math","max","min","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","viewBox","fill","d","COLORS","red","blue","COLOR_KEYS","Object","keys","theme","selectTheme","GiftRibbon","color","validSvgRandomId","useUniqueId","colorKey","gradientColor","startColor","endColor","root","ribbon","x1","y1","x2","y2","gradientUnits","offset","getStickerFromGift","gift","attributes","find","attr","getTotalGiftAvailability","availabilityTotal","totalCount","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","selectChat","priority","lastMessage","selectChatLastMessage","date","isVerified","includes","Date","now","indexOf","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withDefaultPadding","onFilterChange","onDisabledClick","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","requestMeasure","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","filter","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","forEach","push","concat","handleItemClick","categoryType","newSelectedCategories","splice","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","key","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","subtitle","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","PickerItem","avatarElement","inactive","inputElement","Radio","checked","onlyInput","Checkbox","inputPosition","beforeChildren","pickerCategoryTitle","container","header","peerChip","InputText","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","titleClassName","isClickable","RippleEffect","IS_IOS","RadialPatternBackground","backgroundColors","patternColor","patternIcon","clearBottomSector","containerRef","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","preloadImage","then","patternPositions","coordinates","ring","ringItemCount","floor","ringProgress","ringRadius","angleShift","PI","angle","cos","sin","sizeFactor","random","entry","contentRect","clientWidth","clientHeight","draw","canvas","ctx","getContext","save","centerShift","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","addColorStop","maxSide","CustomEmojiEffect","reaction","isLottie","particleSize","onEnded","stickerHash","getStickerHashById","documentId","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","Array","from","generateRandomDropPath","path","CustomEmoji","withSharedAnimation","onAnimationEnd","alt","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","containerId","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","ReactionAnimatedEmoji","effectSize","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","getActions","isCustom","availableReaction","r","isSameReaction","centerIconId","centerIcon","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","available","emoticon","emoji","effectId","stickers","isIntersecting","useIsIntersecting","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","noLoop","Fragment","effect","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","icons","svg","xmlns","fillRule","clipRule","IconSelector","onEmojiSelect","isSvgIcon","console","log","foundIcon","ActionMessageSuggestedAvatar","message","renderContent","openMediaViewer","uploadProfilePhoto","showNotification","isOutgoing","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","photo","content","suggestedPhotoUrl","getPhotoMediaHash","suggestedVideoUrl","getVideoProfilePhotoMediaHash","isVideo","showAvatarNotification","payload","screen","SettingsScreens","Main","actionText","handleSetSuggestedAvatar","file","handleCloseCropModal","handleSetVideo","async","blob","fetchBlob","File","videoTs","videoSizes","l","videoStartTs","chatId","messageId","threadId","MAIN_THREAD_ID","origin","MediaViewerOrigin","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","onClose","ConfirmDialog","isOpen","confirmHandler","textParts","ActionMessageUpdatedAvatar","handleViewUpdatedAvatar","SimilarChannel","channel","openChat","fallbackColor","setColor","imgBlobUrl","getChatAvatarHash","averageColor","getAverageColor","rgb2hex","useAverageColor","formatIntegerCompact","membersCount","MoreChannels","channelsCount","isCurrentUserPremium","openPremiumModal","openChatWithInfo","shouldReplaceHistory","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","count","selectSimilarChannelIds","selectIsCurrentUserPremium","SimilarChannels","toggleChannelRecommendations","loadChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","handleToggle","Skeleton","SHOW_CHANNELS_NUMBER","senderId","targetUserIds","targetChatId","targetMessageId","getMessageReplyInfo","replyToMsgId","targetMessage","selectChatMessage","settings","themes","isFocused","selectIsMessageFocused","direction","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","senderChat","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","starCount","stars","starsGiftSticker","selectGiftStickerForStars","topic","selectTopicFromMessage","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","ActionMessage","isEmbedded","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","observeIntersectionForLoading","onIntersectPinnedMessage","requestConfetti","checkGiftCode","getReceipt","openGiftInfoModalFromMessage","openPrizeStarsTransactionFromGiveaway","oldLang","useOnIntersect","useEnsureMessage","replyInfo","useFocusMessage","elementRef","useUnmountCleanup","isPinned","viewportPinnedIdsToRemove","noAppearanceAnimation","isShown","markShown","isPremiumGift","isGiftCode","isSuggestedAvatar","isUpdatedAvatar","isJoinedMessage","isJoinedChannelMessage","isStarsGift","isStarGift","isStarGiftUnique","isPrizeStars","withServiceReactions","areReactionsPossible","useMessageResizeObserver","shouldShowConfettiRef","isUnread","withStars","usersById","users","byId","targetUsers","userId","renderActionMessageText","isContextMenuOpen","contextMenuAnchor","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isContextMenuShown","handleStarGiftClick","starGift","handlePremiumGiftClick","isGift","fromUserId","toUserId","monthsAmount","handlePrizeStarsClick","handleGiftCodeClick","slug","renderStarGiftUserCaption","fromId","fromPeer","targetPeer","getMessageHtmlId","onMouseDown","preventMessageInputBlur","onContextMenu","giftMessage","AnimatedIconFromSticker","nonInteractive","renderTextWithEntities","entities","Sparkles","preset","renderGift","isFromGiveaway","isGiveaway","isUnclaimed","renderText","getChatTitle","renderGiftCode","formatInteger","targetChatTitle","starGiftMessage","amountToConvert","starsToConvert","isSaved","savedId","isUpgraded","withNodes","pluralValue","canUpgrade","isConverted","amount","withMarkdown","renderStarGiftUserDescription","alreadyPaidUpgradeStars","renderStarGift","centerColor","edgeColor","adaptedPatternColor","textColor","number","renderStarGiftUnique","renderPrizeStars","ContextMenuContainer","anchor","messageListType","onCloseAnimationEnd","Reactions","isOutside","useModuleLoader","Bundles","Extra","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","isResizingContainer","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","closest","isToBottom","scrollPosition","exec","maxDistance","result","animateScroll","element","position","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","querySelector","addExtraClass","requestForcedReflow","MAX_EFFECT_COUNT","IS_ANDROID","QUALITY","PaidReactionEmoji","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","useShowTransition","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","LOCAL_TGS_URLS","StarReactionEffect","quality","REACTION_SIZE","selectStarsState","ReactionButton","isOwnMessage","recentReactors","chosenClassName","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","openPaidReactionModal","requestWave","counterRef","animationRef","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","stopPropagation","prevReaction","button","balance","originReaction","startX","startY","offsetHeight","currentScale","Number","getComputedStyle","scale","cancel","animate","duration","easing","prevAmount","usePrevious","shouldRenderPaidCounter","own","paid","isReactionChosen","chosen","animatedEmoji","paidCounter","counter","maxWidth","metaChildren","noRecentReactors","tags","toggleReaction","addLocalPaidReaction","updateMiddleSearch","performMiddleSearch","results","areTags","recentReactions","reduce","acc","recentReactorsByReactionKey","recentReaction","getReactionKey","messageKey","getMessageKey","reactionKey","shouldHideRecentReactors","tag","isChosen","update","savedTag","initialSection","paidLocalCount","localId","cacheBreaker","toString","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","withContextMenu","onRemove","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","Modal","isSlim","teactExperimentControlled","isText","withCount","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","hasText","handleRemoveClick","handleRenameTag","newTitle","getTriggerElement","getRootElement","document","body","getMenuElement","getLayout","withPortal","shouldAvoidNegativePosition","tagText","tail","tailFill","Menu","autoClose","MenuItem","destructive","getRequestInputInvoice","inputInvoice","shouldHideName","giftId","shouldUpgrade","currency","purpose","hash","userIds","boostChannelId","option","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","inputSavedGift","shouldKeepOriginalDetails","savedGift","getRequestInputSavedStarGift","inputGift","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","titleKey","subtitleKey","peerColorId","customPeerAvatarColor","withPremiumGradient","formatStarsTransactionAmount","starsAmount","nanos","abs","formatStarsAmount","getStarsTransactionFromGift","transactionId","isMyGift","getPrizeStarsTransactionFromGiveaway","giveawayPostId","areInputSavedGiftsEqual","one","two","arePropsShallowEqual","isApiPeerUser","SERVICE_NOTIFICATIONS_USER_ID","isSupport","isContact","callback","delay","savedCallback","RADIUS","ITERATIONS","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","img","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","fastBlur","onload","replyOriginForId","loadMessage","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","addEventListener","passive","removeEventListener","prevRef","lastRef","shouldFocusOnResize","focusLastMessage","messageHeightRef","handleResize","lastHeight","newHeight","isAnimatingScroll","beginHeavyAnimation","resizeDiff","scrollHeight","scrollTop","round","throttledResize","useThrottledCallback","DEFAULT_DURATION","stopById","Map","animateHorizontalScroll","getAttribute","containerWidth","scrollWidth","dataset","scrollId","remainingPath","Promise","resolve","get","isStopped","set","scrollSnapType","startAt","t","currentPath","transition","delete","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","getOffsetToContainer","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","cancelScrollBlockingAnimation","hex2rgb","param","parseInt","substring","p0","p1","p2","rgb2hsb","g","b","h","s","v","hsb2rgb","f","p","q","url","defaultRGB","data","rgb","context","image","naturalHeight","naturalWidth","getImageData","blockSize","getColorLuma","rgbColor","getPatternColor","hue","saturation","convertToRGBA","getTextColor","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","offsetTop","offsetLeft","contains","offsetParent"],"sourceRoot":""}